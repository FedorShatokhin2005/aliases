#!/bin/bash

alias romd='cd ~/${ROM}'
alias dtd='cd ~/${ROM}/device/xiaomi/platina'
alias kd='cd ~/${ROM}/kernel/xiaomi/platina'
alias vnd='cd ~/${ROM}/vendor/xiaomi/platina'
alias home='cd ~/'
alias logg='git log --pretty=short'
alias cls='clear'
alias add.='git add .'
alias cond='git cherry-pick --continue'
alias gus='gdrive upload --share'

alias javatwrp='sudo update-java-alternatives --set /usr/lib/jvm/java-1.8.0-openjdk-amd64'
alias javarom='sudo update-java-alternatives --set /usr/lib/jvm/java-8-oracle'

RED='\033[0;31m'
NC='\033[0m'

function buildrom() {
echo "ROM specified is ${ROM}";
cd ~/${ROM};
source build/envsetup.sh;
if [ ${ROM} "==" "aicp" ]
then
time brunch aicp_platina-userdebug;
elif [ ${ROM} "==" "aosip" ]
then
lunch aosip_platina-userdebug;
time mka kronic;
elif [ ${ROM} "==" "crdroid" ]
then
time brunch lineage_platina-userdebug;
elif [ ${ROM} "==" "dotos" ]
then
lunch dot_platina-userdebug
make bacon
fi
}

function buildbi() {
echo "Building bootimage for ${ROM}";
cd ~/${ROM};
source build/envsetup.sh;
if [ ${ROM} "==" "aicp" ]
then
lunch aicp_platina-userdebug;
make -j8 bootimage;
elif [ ${ROM} "==" "aosip" ]
then
lunch aosip_platina-userdebug;
time mka bootimage;
elif [ ${ROM} "==" "crdroid" ]
then
lunch lineage_platina-userdebug;
make -j8 bootimage;
fi
}

function sdm660_add_wifi() {
git fetch caf/qcacld-3.0 $1 && git merge --allow-unrelated-histories -s ours --no-commit FETCH_HEAD && git read-tree --prefix=drivers/staging/qcacld-3.0 -u FETCH_HEAD && git commit --no-edit;
git fetch caf/qca-wifi-host-cmn $1 && git merge --allow-unrelated-histories -s ours --no-commit FETCH_HEAD && git read-tree --prefix=drivers/staging/qca-wifi-host-cmn -u FETCH_HEAD && git commit --no-edit;
git fetch caf/fw-api $1 && git merge --allow-unrelated-histories -s ours --no-commit FETCH_HEAD && git read-tree --prefix=drivers/staging/fw-api -u FETCH_HEAD && git commit --no-edit;
}
function sdm660_wifi_repo_add() {
git remote add caf/qcacld-3.0 https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qcacld-3.0/ &&
git remote add caf/qca-wifi-host-cmn https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qca-wifi-host-cmn/ &&
git remote add caf/fw-api https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/fw-api/
}
function sdm660_update_wifi() {
git fetch caf/fw-api $1;
git merge -X subtree=drivers/staging/fw-api FETCH_HEAD --no-edit;
git fetch caf/qca-wifi-host-cmn $1;
git merge -X subtree=drivers/staging/qca-wifi-host-cmn FETCH_HEAD --no-edit;
git fetch caf/qcacld-3.0 $1;
git merge -X subtree=drivers/staging/qcacld-3.0 FETCH_HEAD --no-edit;
}

alias pick='git cherry-pick -s';
alias epick='git cherry-pick -s -e';
alias commit='git commit -s'

function abort() {
if [ $1 "==" "c" ]
then
git cherry-pick --abort
elif [ $1 "==" "r" ]
then
git revert --abort
elif [ $1 "==" "m" ]
then
git merge --abort
elif [ $1 "==" "a" ]
then
git am --abort
fi
}

function aosipota() {
timestamp=$(stat -c %Y $1)
name=$(stat -c %n $1 | sed 's/.*\///')
id=$(sha256sum $1 | cut -d " " -f 1)
size=$(cat $1 | wc -c)

echo -e "";
echo -e "    {";
echo -e "      \x22datetime\x22: ${timestamp},";
echo -e "      \x22filename\x22: \x22${name}\x22,";
echo -e "      \x22id\x22: \x22${id}\x22,";
echo -e "      \x22romtype\x22: \x22Pizza\x22,";
echo -e "      \x22size\x22: ${size},";
echo -e "      \x22url\x22: \x22https://sourceforge.net/projects/aosip-platina/files/${name}\x22,";
echo -e "      \x22version\x22: \x229.0\x22";
echo -e "    }";
echo -e "";
}

function chout() {
git checkout $1 -- $2
}

function syncrepo() {
repo sync -f --no-tags --no-clone-bundle;
}

function fsyncrepo() {
repo sync -f --force-sync --no-tags --no-clone-bundle;
}

function conflict() {
<$1 grep -nF '>>>>'
}

function allconflict() {
cat * | grep \>\>\>\>\> -r
}

function cpuperformance() {
for i in {0..3..1}; do
	sudo cpufreq-set --cpu $i --governor performance
	echo "CPU $i:"
	cat /sys/devices/system/cpu/cpu$i/cpufreq/scaling_governor
done
}

function cpupowersave() {
for i in {0..3..1}; do
	sudo cpufreq-set --cpu $i --governor powersave
	echo "CPU $i:"
	cat /sys/devices/system/cpu/cpu$i/cpufreq/scaling_governor
done
}
